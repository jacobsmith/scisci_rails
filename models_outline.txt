I'm working on a Rails app that's designed for research projects. I have what I think the model/database layout should be, but am having trouble implementing it (thus, I figured there was probably something small, either in implementation or design, that should be looked at). The overall schema I'm working with is as follows:

  User
  |  -username
  |  -password
  |
  \ 
    Project
    |  -name
    |
    \
      Source
      |  -title
      |  -author
      |  -URL
      |  -comments
      \    
        Note
          -quote
          -comments

The way I have it set up currently is as follows:
  User has_many :projects

  Projects belongs_to :user
  Projects has_many :sources

  Sources belongs_to :projects
  Sources has_many :notes

  Notes belongs_to :sources


The problem I am running into is that I want each of these to be descendants of its parents (Thus, a user will create an account, create a project, and then everything after that is a descendant of just that project. The user can also create different projects, each of which are a self-contained "eco-system" if you will). 

My current thought is to save :project_id to a cookie and then access it as a hidden value in the source submit form (save parent_id, include it with the create child request). Or, abstract that away into :current_project, :current_source methods through helpers like in Devise :current_user.

This seems a bit clunky so I was just wondering if you had any suggestions!

Thanks
-Smitty
